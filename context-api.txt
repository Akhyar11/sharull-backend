# Konteks API untuk Peran Pengguna

Dokumen ini menyediakan konteks untuk API yang tersedia bagi pengguna yang diautentikasi. Semua rute di bawah ini memerlukan header `Authorization: Bearer <token>`.

---

## 1. Profil Pengguna

### 1.1. Lihat Profil

- **Deskripsi:** Mengambil detail profil pengguna yang sedang login.
- **Endpoint:** `/api/user/profile`
- **Metode:** `GET`
- **Request:**
  - **Headers:** `Authorization: Bearer <token>`
- **Response:**
  - **200 OK:**
    ```json
    {
      "data": {
        "id": "string",
        "name": "string",
        "email": "string",
        "phone": "string",
        "role": "user",
        "image_id": "string",
        "created_at": "string",
        "updated_at": "string"
      }
    }
    ```
  - **401 Unauthorized:** Jika token tidak valid atau tidak ada.
  - **404 Not Found:** Jika pengguna tidak ditemukan.
  - **500 Internal Server Error:** Jika terjadi kesalahan server.

### 1.2. Perbarui Profil

- **Deskripsi:** Memperbarui detail profil pengguna yang sedang login.
- **Endpoint:** `/api/user/profile`
- **Metode:** `PUT`
- **Request:**
  - **Headers:** `Authorization: Bearer <token>`
  - **Body:**
    ```json
    {
      "name": "string (opsional)",
      "email": "string (opsional)",
      "password": "string (opsional)",
      "phone": "string (opsional)",
      "image": "string (base64, opsional)"
    }
    ```
- **Response:**
  - **200 OK:**
    ```json
    {
      "msg": "Profile updated successfully",
      "data": {
        "id": "string",
        "name": "string",
        "email": "string",
        "phone": "string",
        "role": "user",
        ...
      }
    }
    ```
  - **401 Unauthorized:** Jika token tidak valid atau tidak ada.
  - **404 Not Found:** Jika pengguna tidak ditemukan.
  - **500 Internal Server Error:** Jika terjadi kesalahan server.

---

## 2. Paket Perjalanan

### 2.1. Daftar Paket

- **Deskripsi:** Mendapatkan daftar semua paket perjalanan yang tersedia.
- **Endpoint:** `/api/user/packages`
- **Metode:** `GET`
- **Request:**
  - **Headers:** `Authorization: Bearer <token>`
  - **Query Params:**
    - `page`: `number` (opsional, default: 1)
    - `limit`: `number` (opsional, default: 10)
    - `search`: `string` (opsional, untuk mencari berdasarkan nama paket)
    - `orderBy`: `string` (opsional, contoh: `name_asc`, `price_desc`)
- **Response:**
  - **200 OK:**
    ```json
    {
      "list": [
        {
          "id": "string",
          "name": "string",
          "description": "string",
          "price": "number",
          "destination_ids": ["string"],
          "destinations": [
            {
              "id": "string",
              "name": "string",
              ...
            }
          ]
        }
      ],
      "total": "number",
      "page": "number",
      "limit": "number"
    }
    ```
  - **500 Internal Server Error:** Jika terjadi kesalahan server.

### 2.2. Detail Paket

- **Deskripsi:** Mendapatkan detail satu paket perjalanan berdasarkan ID.
- **Endpoint:** `/api/user/packages/:id`
- **Metode:** `GET`
- **Request:**
  - **Headers:** `Authorization: Bearer <token>`
  - **Params:** `id` (ID paket)
- **Response:**
  - **200 OK:**
    ```json
    {
      "data": {
        "id": "string",
        "name": "string",
        "description": "string",
        "price": "number",
        "destination_ids": ["string"],
        "destinations": [
          {
            "id": "string",
            "name": "string",
            ...
          }
        ]
      }
    }
    ```
  - **404 Not Found:** Jika paket tidak ditemukan.
  - **500 Internal Server Error:** Jika terjadi kesalahan server.

---

## 3. Jadwal Paket

### 3.1. Daftar Jadwal per Paket

- **Deskripsi:** Mendapatkan daftar jadwal yang tersedia untuk paket tertentu.
- **Endpoint:** `/api/user/packages/:packageId/schedules`
- **Metode:** `GET`
- **Request:**
  - **Headers:** `Authorization: Bearer <token>`
  - **Params:** `packageId` (ID paket)
  - **Query Params:**
    - `page`: `number` (opsional, default: 1)
    - `limit`: `number` (opsional, default: 10)
    - `orderBy`: `string` (opsional, contoh: `departure_date_asc`)
- **Response:**
  - **200 OK:**
    ```json
    {
      "list": [
        {
          "id": "string",
          "package_id": "string",
          "fleet_id": "string",
          "departure_date": "string",
          "return_date": "string",
          "available_seats": "number",
          "package_data": { ... },
          "fleet_data": { ... }
        }
      ],
      "total": "number",
      "page": "number",
      "limit": "number"
    }
    ```
  - **500 Internal Server Error:** Jika terjadi kesalahan server.

### 3.2. Detail Jadwal

- **Deskripsi:** Mendapatkan detail satu jadwal berdasarkan ID.
- **Endpoint:** `/api/user/schedules/:id`
- **Metode:** `GET`
- **Request:**
  - **Headers:** `Authorization: Bearer <token>`
  - **Params:** `id` (ID jadwal)
- **Response:**
  - **200 OK:**
    ```json
    {
      "data": {
        "id": "string",
        "package_id": "string",
        "fleet_id": "string",
        "departure_date": "string",
        "return_date": "string",
        "available_seats": "number",
        "package_data": { ... },
        "fleet_data": { ... }
      }
    }
    ```
  - **404 Not Found:** Jika jadwal tidak ditemukan.
  - **500 Internal Server Error:** Jika terjadi kesalahan server.

---

## 4. Pemesanan (Bookings)

### 4.1. Daftar Pemesanan Pengguna

- **Deskripsi:** Mendapatkan daftar semua pemesanan yang dilakukan oleh pengguna.
- **Endpoint:** `/api/user/bookings`
- **Metode:** `GET`
- **Request:**
  - **Headers:** `Authorization: Bearer <token>`
  - **Query Params:**
    - `page`: `number` (opsional, default: 1)
    - `limit`: `number` (opsional, default: 10)
    - `orderBy`: `string` (opsional, contoh: `booking_date_desc`)
- **Response:**
  - **200 OK:**
    ```json
    {
      "list": [
        {
          "id": "string",
          "user_id": "string",
          "package_schedule_id": "string",
          "booking_date": "string",
          "number_of_seats": "number",
          "total_price": "number",
          "payment_status": "string",
          "package_data": { ... },
          "schedule_data": { ... }
        }
      ],
      "total": "number",
      "page": "number",
      "limit": "number"
    }
    ```
  - **500 Internal Server Error:** Jika terjadi kesalahan server.

### 4.2. Detail Pemesanan

- **Deskripsi:** Mendapatkan detail satu pemesanan berdasarkan ID.
- **Endpoint:** `/api/user/bookings/:id`
- **Metode:** `GET`
- **Request:**
  - **Headers:** `Authorization: Bearer <token>`
  - **Params:** `id` (ID pemesanan)
- **Response:**
  - **200 OK:**
    ```json
    {
      "data": {
        "id": "string",
        "user_id": "string",
        ...
      }
    }
    ```
  - **403 Forbidden:** Jika pemesanan bukan milik pengguna.
  - **404 Not Found:** Jika pemesanan tidak ditemukan.
  - **500 Internal Server Error:** Jika terjadi kesalahan server.

### 4.3. Buat Pemesanan

- **Deskripsi:** Membuat pemesanan baru untuk sebuah jadwal paket.
- **Endpoint:** `/api/user/bookings`
- **Metode:** `POST`
- **Request:**
  - **Headers:** `Authorization: Bearer <token>`
  - **Body:**
    ```json
    {
      "schedule_id": "string",
      "number_of_people": "number",
      "notes": "string (opsional)"
    }
    ```
- **Response:**
  - **201 Created:**
    ```json
    {
      "msg": "Booking created successfully",
      "data": { ... }
    }
    ```
  - **400 Bad Request:** Jika input tidak valid atau kursi tidak tersedia.
  - **404 Not Found:** Jika jadwal tidak ditemukan.
  - **500 Internal Server Error:** Jika terjadi kesalahan server.

---

## 5. Metode Pembayaran

### 5.1. Daftar Metode Pembayaran

- **Deskripsi:** Mendapatkan daftar semua metode pembayaran yang aktif.
- **Endpoint:** `/api/user/payment-methods`
- **Metode:** `GET`
- **Request:**
  - **Headers:** `Authorization: Bearer <token>`
- **Response:**
  - **200 OK:**
    ```json
    {
      "list": [
        {
          "id": "string",
          "name": "string",
          "provider": "string",
          "type": "string",
          "account_number": "string",
          "account_name": "string",
          "is_active": true
        }
      ]
    }
    ```
  - **500 Internal Server Error:** Jika terjadi kesalahan server.

---

## 6. Pembayaran

### 6.1. Daftar Pembayaran Pengguna

- **Deskripsi:** Mendapatkan daftar semua pembayaran yang dilakukan oleh pengguna.
- **Endpoint:** `/api/user/payments`
- **Metode:** `GET`
- **Request:**
  - **Headers:** `Authorization: Bearer <token>`
  - **Query Params:**
    - `page`: `number` (opsional, default: 1)
    - `limit`: `number` (opsional, default: 10)
    - `orderBy`: `string` (opsional, contoh: `payment_date_desc`)
- **Response:**
  - **200 OK:**
    ```json
    {
      "list": [
        {
          "id": "string",
          "booking_id": "string",
          "payment_method_id": "string",
          "payment_date": "string",
          "payment_amount": "number",
          "status": "string",
          "payment_method": { ... },
          "booking": { ... }
        }
      ],
      "total": "number",
      "page": "number",
      "limit": "number"
    }
    ```
  - **500 Internal Server Error:** Jika terjadi kesalahan server.

### 6.2. Detail Pembayaran

- **Deskripsi:** Mendapatkan detail satu pembayaran berdasarkan ID.
- **Endpoint:** `/api/user/payments/:id`
- **Metode:** `GET`
- **Request:**
  - **Headers:** `Authorization: Bearer <token>`
  - **Params:** `id` (ID pembayaran)
- **Response:**
  - **200 OK:**
    ```json
    {
      "data": {
        "id": "string",
        ...
      }
    }
    ```
  - **403 Forbidden:** Jika pembayaran bukan milik pengguna.
  - **404 Not Found:** Jika pembayaran tidak ditemukan.
  - **500 Internal Server Error:** Jika terjadi kesalahan server.

### 6.3. Buat Pembayaran

- **Deskripsi:** Membuat pembayaran baru untuk sebuah pemesanan.
- **Endpoint:** `/api/user/payments`
- **Metode:** `POST`
- **Request:**
  - **Headers:** `Authorization: Bearer <token>`
  - **Body:**
    ```json
    {
      "booking_id": "string",
      "payment_method_id": "string",
      "amount": "number",
      "payment_proof": "string (base64)"
    }
    ```
- **Response:**
  - **201 Created:**
    ```json
    {
      "msg": "Payment created successfully",
      "data": { ... }
    }
    ```
  - **400 Bad Request:** Jika input tidak valid.
  - **403 Forbidden:** Jika pemesanan bukan milik pengguna.
  - **404 Not Found:** Jika pemesanan atau metode pembayaran tidak ditemukan.
  - **500 Internal Server Error:** Jika terjadi kesalahan server.