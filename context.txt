# Context Project: sharull-backend

## Deskripsi Singkat
Backend API untuk sistem manajemen perjalanan (tour & travel) berbasis Node.js + Express, menggunakan TypeScript dan Firebase sebagai database. Proyek ini menyediakan endpoint untuk autentikasi admin, manajemen user, destinasi, paket wisata, armada, jadwal paket, booking, pembayaran, invoice, dan manajemen gambar.

## Struktur Utama
- **main.ts**: Entry point utama (untuk production), menyiapkan Express app, middleware, dan routing utama.
- **main-development.ts**: Entry point untuk development, menjalankan server Express langsung.
- **src/routes/api.ts**: Routing utama API, membagi endpoint publik (login, file-proxy) dan grup admin (dengan middleware JWT admin).
- **src/controllers/**: Berisi logic untuk setiap resource (users, bookings, packages, payments, dll).
- **src/models/**: Model data, terhubung ke Firebase melalui FirebaseService.
- **firebaseORM/**: Abstraksi ORM untuk Firebase, setup admin SDK, dan tipe data.

## Vibe Coding
- Clean code, modular, separation of concern antara controller, model, dan route.
- Menggunakan TypeScript dengan strict mode.
- Middleware untuk autentikasi admin berbasis JWT.
- Environment variable dikelola dengan dotenv, .env di-ignore dari git.
- Semua response API konsisten menggunakan JSON.
- Validasi input di setiap controller, error handling eksplisit.
- Relasi antar resource (misal: destinasi punya image, paket punya destinasi, dsb) diatur di model.
- Penggunaan async/await untuk semua operasi async.
- Struktur folder rapi: controller, model, middleware, route, utils.

## Konfigurasi Penting
- **.env** (tidak di-repo):
  - JWT_SECRET, FIREBASE_PROJECT_ID, FIREBASE_PRIVATE_KEY, FIREBASE_CLIENT_EMAIL, FIREBASE_DATABASE_URL, dll.
- **tsconfig.json**: Target ES6, module commonjs, strict, outDir dist, rootDir ./
- **package.json**: Script dev, build, start, dependensi utama: express, firebase-admin, dotenv, cors, bcrypt, jsonwebtoken, axios.

## Alur Utama API
- `/api/login` (POST): Login admin, return JWT.
- `/api/file-proxy/:id` (GET): Ambil gambar by id.
- `/api/admin/*`: Semua endpoint admin, wajib JWT admin.
  - `/users`, `/destination`, `/packages`, `/fleets`, `/packagespackages`, `/bookings`, `/paymentmetodes`, `/payments`, `/invoices` (CRUD)

## Catatan Pengembangan
- Untuk menambah resource baru, buat model, controller, dan daftarkan di route.
- Untuk menambah relasi, gunakan setRelation di model FirebaseService.
- Semua logic autentikasi admin ada di adminAuthController dan adminMiddleware.
- Untuk development, gunakan script `dev` (nodemon + ts-node main-development.ts).
- Untuk production, build TypeScript (`tsc`), lalu jalankan `node dist/main.js`.

## Vibe
- Fokus pada maintainability, readable, dan scalable.
- Hindari hardcode, gunakan env dan constant.
- Error handling jelas, response API informatif.
- Siap untuk integrasi front-end modern (Next.js, React, dsb). 